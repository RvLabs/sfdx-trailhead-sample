# This is a basic workflow to help you get started with Actions

name: SFDX CICD

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
    - 'sfdx-trailhead-sample/sfdx-chan/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    env:
      SFDX_KEY_DIR: sfdx-key
      KEY_VAULT: kv-rvlabs
      KV_CERT: sfappcert
      CERT: cert.pfx
      DECODED_CERT: decoded.pfx
      DECODED_PEM: decoded.pem
      DECODED_KEY: decoded.key
      SFDX_CLI_DIR: sfdx-cli
      

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.SFDX_AZ_CREDS }}
      
      - name: Get cert
        run: |
          echo "Base path: " $(pwd)
          mkdir ${{ env.SFDX_KEY_DIR }} && cd ${{ env.SFDX_KEY_DIR }}
          echo "SFDX key path: " $(pwd)
          az keyvault secret download --vault-name ${{ env.KEY_VAULT }} -n ${{ env.KV_CERT }} -f ${{ env.CERT }}
          cat ${{ env.CERT }} | base64 -d > ${{ env.DECODED_CERT }}
          openssl pkcs12 -in ${{ env.DECODED_CERT }} -nocerts -nodes -out ${{ env.DECODED_PEM }} -passin pass:
          openssl rsa -in ${{ env.DECODED_PEM }} -out ${{ env.DECODED_KEY }}
          ls -l

      # Download and install SFDX CLI
      - name: Get SFDX CLI
        run: |
          echo "Base path: " $(pwd)
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir ${{ env.SFDX_CLI_DIR }}
          tar xJf sfdx-linux-amd64.tar.xz -C ${{ env.SFDX_CLI_DIR }} --strip-components 1
          ./${{ env.SFDX_CLI_DIR }}/install
          sfdx --version

      - name: SFDX Login
        run: |
          sfdx force:auth:jwt:grant --clientid ${{ secrets.SFDX_CONSUMER_KEY }} --jwtkeyfile ${{ env.SFDX_KEY_DIR }}/${{ env.DECODED_KEY }} --username ${{ secrets.SFDX_HUB_USERNAME }} --setdefaultdevhubusername
          
      - name: SFDX Display and List
        run: |
          sfdx force:org:list
          sfdx force:org:display
